@using Domain.Entities
@model Basket

@{
    ViewData["Title"] = "Cart";
    decimal total = Model.Items.Sum(x => x.Price * x.Quantity);
}

<!-- breadcrumb-section -->
<div class="breadcrumb-section breadcrumb-bg">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 offset-lg-2 text-center">
                <div class="breadcrumb-text">
                    <p>Fresh and Organic</p>
                    <h1>Cart</h1>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- end breadcrumb section -->

<!-- cart -->
<div class="cart-section mt-150 mb-150">
    <div class="container">
        <div class="row">
            @if (Model != null && Model.Items.Count > 0)
            {
                <div class="col-lg-8 col-md-12">
                    <div class="cart-table-wrap">
                        <table class="cart-table">
                            <thead class="cart-table-head">
                                <tr class="table-head-row">
                                    <th class="product-remove"></th>
                                    <th class="product-image">Product Image</th>
                                    <th class="product-name">Name</th>
                                    <th class="product-price">Price</th>
                                    <th class="product-quantity">Quantity</th>
                                    <th class="product-total">Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Items)
                                {
                                    <tr class="table-body-row" data-item-id="@item.Id">
                                        <td class="product-remove">
                                            <a class="remove-btn" data-product-id="@item.Id"
                                                data-item-price="@item.Price" data-item-quantity="@item.Quantity">
                                                <i class="far fa-window-close"></i>
                                            </a>
                                        </td>
                                        <td class="product-image"><img src="~/upload/product/@item.Product.ImageName" alt="">
                                        </td>
                                        <td class="product-name">@item.Product.Name</td>
                                        <td class="product-price">$@item.Price.ToString("F2", System.Globalization.CultureInfo.InvariantCulture)</td>
                                        <td class="product-quantity">
                                            <a class="decrement-btn" data-product-id="@item.Id"
                                                data-item-price="@item.Price">-</a>
                                            <a class="border quantity">@item.Quantity</a>
                                            <a class="increment-btn" data-product-id="@item.Id"
                                                data-item-price="@item.Price">+</a>
                                        </td>
                                        <td class="product-total">$@((item.Price * item.Quantity).ToString("F2", System.Globalization.CultureInfo.InvariantCulture))</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="col-lg-4">
                    <div class="total-section">
                        <table class="total-table">
                            <thead class="total-table-head">
                                <tr class="table-total-row">
                                    <th>Total</th>
                                    <th>Price</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr class="total-data">
                                    <td><strong>Subtotal: </strong></td>
                                    <td class="subtotal" id="summary-total-price">$@total.ToString("F2", System.Globalization.CultureInfo.InvariantCulture)</td>
                                </tr>
                                <tr class="total-data">
                                    <td><strong>Shipping: </strong></td>
                                    <td>$45.00</td>
                                </tr>
                                <tr class="total-data">
                                    <td><strong>Total: </strong></td>
                                    <td class="total" id="final-total-price">$@((total + 45).ToString("F2", System.Globalization.CultureInfo.InvariantCulture))</td>
                                </tr>
                            </tbody>
                        </table>
                        <div class="cart-buttons">
                            <a class="boxed-btn black" id="checkout-button">Check Out</a>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="col-lg-12 text-center">
                    <h2>Your cart is empty</h2>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://js.stripe.com/v3/"></script>
    <script>
        var stripe = Stripe('@ViewBag.StripePublishableKey');

        var checkoutButton = document.getElementById('checkout-button');

        checkoutButton.addEventListener('click', function () {
            fetch('/payment/createcheckoutsession', {
                method: 'POST',
            })
                .then(function (response) {
                    return response.json();
                })
                .then(function (sessionId) {
                    return stripe.redirectToCheckout({ sessionId: sessionId.id });
                })
                .then(function (result) {
                    if (result.error) {
                        alert(result.error.message);
                    }
                })
                .catch(function (error) {
                    Swal.fire({
                            title: 'Error!',
                            text: error,
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                });
        });
    </script>

    <script>
        $(document).ready(function () {
            $('.remove-btn').on("click", function () {
                var productId = $(this).data("product-id");
                var itemPrice = $(this).data("item-price");
                var itemQuantity = $(this).data("item-quantity");
                var itemRow = $(this).closest('.table-body-row');

                $.ajax({
                    url: "/Basket/RemoveFromBasket",
                    type: "POST",
                    data: { basketItemId: productId },
                    success: function (response) {
                        Swal.fire({
                            title: 'Success!',
                            text: 'Successfully removed product from cart.',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                itemRow.remove();

                                // Update total price
                                var totalPrice = parseFloat($('#summary-total-price').text().replace('$', '')) - (itemPrice * itemQuantity);
                                $('#summary-total-price').text('$' + totalPrice.toFixed(2));
                                $('#final-total-price').text('$' + (totalPrice == 0 ? 0 : totalPrice + 45).toFixed(2));
                            }
                        });
                    },
                    error: function (xhr) {
                        var errorMessage = xhr.responseText || 'Something went wrong.';
                        Swal.fire({
                            title: 'Error!',
                            text: errorMessage,
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                });
            });

            $('.increment-btn').on("click", function () {
                var productId = $(this).data("product-id");
                var itemPrice = $(this).data("item-price");
                var quantityElement = $(this).siblings('.quantity');
                var itemQuantity = parseInt(quantityElement.text());
                var totalPriceElement = $(this).closest('.table-body-row').find('.product-total');

                $.ajax({
                    url: "/Basket/IncrementItem",
                    type: "POST",
                    data: { basketItemId: productId },
                    success: function (response) {
                        itemQuantity++;
                        quantityElement.text(itemQuantity);

                        var totalProductPrice = itemPrice * itemQuantity;
                        totalPriceElement.text('$ ' + totalProductPrice.toFixed(2));


                        var totalPrice = parseFloat($('#summary-total-price').text().replace('$', '')) + itemPrice;
                        $('#summary-total-price').text('$' + totalPrice.toFixed(2));
                        $('#final-total-price').text('$' + (totalPrice == 0 ? 0 : totalPrice + 45).toFixed(2));
                    },
                    error: function (xhr) {
                        var errorMessage = xhr.responseText || 'Something went wrong.';
                        Swal.fire({
                            title: 'Error!',
                            text: errorMessage,
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                });
            });

            $('.decrement-btn').on("click", function () {
                var productId = $(this).data("product-id");
                var itemPrice = $(this).data("item-price");
                var quantityElement = $(this).siblings('.quantity');
                var itemQuantity = parseInt(quantityElement.text());
                var totalPriceElement = $(this).closest('.table-body-row').find('.product-total');

                if (itemQuantity > 1) {
                    $.ajax({
                        url: "/Basket/DecrementItem",
                        type: "POST",
                        data: { basketItemId: productId },
                        success: function (response) {
                            itemQuantity--;
                            quantityElement.text(itemQuantity);

                            var totalProductPrice = itemPrice * itemQuantity;
                            totalPriceElement.text('$ ' + totalProductPrice.toFixed(2));

                            var totalPrice = parseFloat($('#summary-total-price').text().replace('$', '')) - itemPrice;
                            $('#summary-total-price').text('$' + totalPrice.toFixed(2));
                            $('#final-total-price').text('$' + (totalPrice == 0 ? 0 : totalPrice + 45).toFixed(2));
                        },
                        error: function (xhr) {
                            var errorMessage = xhr.responseText || 'Something went wrong.';
                            Swal.fire({
                                title: 'Error!',
                                text: errorMessage,
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    });
                }
            });
        });
    </script>
}
